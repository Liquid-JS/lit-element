{"version":3,"file":"decorators_test.js","sourceRoot":"","sources":["../../src/test/lib/decorators_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at\r\n * http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at\r\n * http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\nimport {\r\n  customElement,\r\n  html,\r\n  LitElement,\r\n  query,\r\n  queryAll\r\n} from '../../lit-element.js';\r\nimport {generateElementName} from '../test-helpers.js';\r\n\r\nconst assert = chai.assert;\r\n\r\nsuite('decorators', () => {\r\n  let container: HTMLElement;\r\n\r\n  setup(() => {\r\n    container = document.createElement('div');\r\n    container.id = 'test-container';\r\n    document.body.appendChild(container);\r\n  });\r\n\r\n  teardown(() => {\r\n    if (container !== undefined) {\r\n      container.parentElement!.removeChild(container);\r\n      (container as any) = undefined;\r\n    }\r\n  });\r\n\r\n  suite('@customElement', () => {\r\n    test('defines an element', () => {\r\n      const tagName = generateElementName();\r\n      @customElement(tagName as keyof HTMLElementTagNameMap)\r\n      class C0 extends HTMLElement {\r\n      }\r\n      const DefinedC = customElements.get(tagName);\r\n      assert.strictEqual(DefinedC, C0);\r\n    });\r\n  });\r\n\r\n  suite('@query', () => {\r\n    @customElement(generateElementName() as keyof HTMLElementTagNameMap)\r\n    class C extends LitElement {\r\n\r\n      @query('#blah') blah?: HTMLDivElement;\r\n\r\n      @query('span') nope?: HTMLSpanElement;\r\n\r\n      render() {\r\n        return html`\r\n          <div>Not this one</div>\r\n          <div id=\"blah\">This one</div>\r\n        `;\r\n      }\r\n    }\r\n\r\n    test('returns an element when it exists', async () => {\r\n      const c = new C();\r\n      container.appendChild(c);\r\n      await c.updateComplete;\r\n      const div = c.blah;\r\n      assert.instanceOf(div, HTMLDivElement);\r\n      assert.equal(div!.innerText, 'This one');\r\n    });\r\n\r\n    test('returns null when no match', async () => {\r\n      const c = new C();\r\n      container.appendChild(c);\r\n      await c.updateComplete;\r\n      const span = c.nope;\r\n      assert.isNull(span);\r\n    });\r\n  });\r\n\r\n  suite('@queryAll', () => {\r\n    @customElement(generateElementName() as keyof HTMLElementTagNameMap)\r\n    class C extends LitElement {\r\n\r\n      @queryAll('div') divs!: NodeList;\r\n\r\n      @queryAll('span') spans!: NodeList;\r\n\r\n      render() {\r\n        return html`\r\n          <div>Not this one</div>\r\n          <div id=\"blah\">This one</div>\r\n        `;\r\n      }\r\n    }\r\n\r\n    test('returns elements when they exists', async () => {\r\n      const c = new C();\r\n      container.appendChild(c);\r\n      await c.updateComplete;\r\n      const divs = c.divs!;\r\n      // This is not true in ShadyDOM:\r\n      // assert.instanceOf(divs, NodeList);\r\n      assert.lengthOf(divs, 2);\r\n    });\r\n\r\n    test('returns empty NodeList when no match', async () => {\r\n      const c = new C();\r\n      container.appendChild(c);\r\n      await c.updateComplete;\r\n      const spans = c.spans;\r\n      // This is not true in ShadyDOM:\r\n      // assert.instanceOf(divs, NodeList);\r\n      assert.lengthOf(spans, 0);\r\n    });\r\n  });\r\n});\r\n"]}